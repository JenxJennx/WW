{"version":3,"mappings":"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","names":["createMultiStyleIconSet","styles","optionsInput","styleNames","Object","keys","length","Error","options","defaultStyle","fallbackFamily","_unused","glyphValidator","__unused","iconSets","reduce","acc","name","style","glyphMap","fontFamily","fontFile","fontStyle","styleFromProps","props","result","propName","indexOf","getIconSetForProps","family","selectIconClass","iconSet","iconClass","reduceProps","prop","getStyledIconSet","getFontFamily","getRawGlyphMap","hasIcon","createStyledIconClass","selectClass","IconClass","selectedIconSet","SelectedIconClass","React","createElement","PureComponent","values","Icon","Button"],"sourceRoot":"","sources":["../src/createMultiStyleIconSet.ts"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport createIconSet from './createIconSet';\n\ntype FontStyle = {\n  fontFamily: string;\n  fontFile: any;\n  glyphMap: any;\n  fontStyle: any;\n};\n\ntype FontStyles = {\n  [key: string]: FontStyle;\n};\n\nexport default function createMultiStyleIconSet(\n  styles: FontStyles,\n  optionsInput = {}\n): any {\n  const styleNames = Object.keys(styles);\n\n  if (styleNames.length === 0) {\n    throw new Error('You need to add at least one style');\n  }\n\n  const options = {\n    defaultStyle: styleNames[0],\n    fallbackFamily: (_unused: any) => styleNames[0],\n    glyphValidator: (_unused: any, __unused: any) => true,\n    ...optionsInput,\n  };\n\n  const iconSets = styleNames.reduce((acc, name) => {\n    const style = styles[name];\n\n    acc[name] = createIconSet(\n      style.glyphMap || {},\n      style.fontFamily || '',\n      style.fontFile || '',\n      style.fontStyle || {}\n    );\n\n    return acc;\n  }, {});\n\n  function styleFromProps(props) {\n    return Object.keys(props).reduce(\n      (result, propName) =>\n        styleNames.indexOf(propName) !== -1 && props[propName] === true\n          ? propName\n          : result,\n      options.defaultStyle\n    );\n  }\n\n  function getIconSetForProps(props) {\n    const { name } = props;\n    const style = styleFromProps(props);\n\n    if (options.glyphValidator(name, style)) return iconSets[style];\n\n    const family = options.fallbackFamily(name);\n\n    if (styleNames.indexOf(family) === -1) {\n      return options.defaultStyle;\n    }\n\n    return iconSets[family];\n  }\n\n  function selectIconClass(iconSet, iconClass) {\n    return iconClass.length > 0 ? iconSet[iconClass] : iconSet;\n  }\n\n  function reduceProps(props) {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (styleNames.indexOf(prop) === -1) {\n        acc[prop] = props[prop];\n      }\n\n      return acc;\n    }, {});\n  }\n\n  function getStyledIconSet(style, name = '') {\n    if (styleNames.indexOf(style) === -1) {\n      return iconSets[options.defaultStyle];\n    }\n\n    return !name\n      ? iconSets[styleFromProps({ [style]: true })]\n      : getIconSetForProps({ name, [style]: true });\n  }\n\n  function getFontFamily(style = options.defaultStyle) {\n    return getStyledIconSet(style).getFontFamily();\n  }\n\n  function getRawGlyphMap(style = options.defaultStyle) {\n    return getStyledIconSet(style).getRawGlyphMap();\n  }\n\n  function hasIcon(name, style = options.defaultStyle) {\n    return options.glyphValidator(name, style);\n  }\n\n  function createStyledIconClass(selectClass = '') {\n    class IconClass extends PureComponent {\n      static defaultProps = styleNames.reduce((acc, name) => {\n        acc[name] = false;\n        return acc;\n      }, {});\n\n      static font = Object.values(styles).reduce((acc, style) => {\n        acc[style.fontFamily] = style.fontFile;\n        return acc;\n      }, {});\n\n      static Button: any;\n\n      static StyledIconSet = getStyledIconSet;\n      static getFontFamily = getFontFamily;\n      static getRawGlyphMap = getRawGlyphMap;\n      static hasIcon = hasIcon;\n\n      render() {\n        const selectedIconSet = getIconSetForProps(this.props);\n        const SelectedIconClass = selectIconClass(selectedIconSet, selectClass);\n        const props = reduceProps(this.props);\n\n        return React.createElement(SelectedIconClass, props);\n      }\n    }\n\n    return IconClass;\n  }\n\n  const Icon = createStyledIconClass();\n  Icon.Button = createStyledIconClass('Button');\n  return Icon;\n}\n"]}