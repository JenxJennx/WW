3c1050d1de7904fdf76765bcfb6c9326
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _normalizeText = _interopRequireDefault(require("../helpers/normalizeText"));

var _config = require("../config");

var _Text = _interopRequireDefault(require("../text/Text"));

var _jsxRuntime = require("react/jsx-runtime");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var CardFeaturedSubtitle = function CardFeaturedSubtitle(_a) {
  var _b;

  var theme = _a.theme,
      style = _a.style,
      props = __rest(_a, ["theme", "style"]);

  return (0, _jsxRuntime.jsx)(_Text.default, _objectSpread({
    style: _reactNative.StyleSheet.flatten([(0, _extends2.default)({
      fontSize: (0, _normalizeText.default)(13),
      marginBottom: 8,
      color: (_b = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _b === void 0 ? void 0 : _b.white
    }, _reactNative.Platform.select({
      android: (0, _extends2.default)({}, _config.fonts.android.black),
      default: {
        fontWeight: '400'
      }
    })), style])
  }, props));
};

var _default = (0, _config.withTheme)(CardFeaturedSubtitle, 'CardFeaturedSubtitle');

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkNhcmRGZWF0dXJlZFN1YnRpdGxlIiwiX2EiLCJfYiIsInRoZW1lIiwic3R5bGUiLCJwcm9wcyIsIlN0eWxlU2hlZXQiLCJmbGF0dGVuIiwiZm9udFNpemUiLCJub3JtYWxpemUiLCJtYXJnaW5Cb3R0b20iLCJjb2xvciIsImNvbG9ycyIsIndoaXRlIiwiUGxhdGZvcm0iLCJzZWxlY3QiLCJhbmRyb2lkIiwiZm9udHMiLCJibGFjayIsImRlZmF1bHQiLCJmb250V2VpZ2h0Iiwid2l0aFRoZW1lIl0sInNvdXJjZXMiOlsiQ2FyZEZlYXR1cmVkU3VidGl0bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fcmVzdCA9ICh0aGlzICYmIHRoaXMuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFBsYXRmb3JtLCBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBub3JtYWxpemUgZnJvbSAnLi4vaGVscGVycy9ub3JtYWxpemVUZXh0JztcbmltcG9ydCB7IGZvbnRzLCB3aXRoVGhlbWUgfSBmcm9tICcuLi9jb25maWcnO1xuaW1wb3J0IFRleHQgZnJvbSAnLi4vdGV4dC9UZXh0JztcbmNvbnN0IENhcmRGZWF0dXJlZFN1YnRpdGxlID0gKF9hKSA9PiB7XG4gICAgdmFyIF9iO1xuICAgIHZhciB7IHRoZW1lLCBzdHlsZSB9ID0gX2EsIHByb3BzID0gX19yZXN0KF9hLCBbXCJ0aGVtZVwiLCBcInN0eWxlXCJdKTtcbiAgICByZXR1cm4gKDxUZXh0IHN0eWxlPXtTdHlsZVNoZWV0LmZsYXR0ZW4oW1xuICAgICAgICBPYmplY3QuYXNzaWduKHsgZm9udFNpemU6IG5vcm1hbGl6ZSgxMyksIG1hcmdpbkJvdHRvbTogOCwgY29sb3I6IChfYiA9IHRoZW1lID09PSBudWxsIHx8IHRoZW1lID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0aGVtZS5jb2xvcnMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi53aGl0ZSB9LCBQbGF0Zm9ybS5zZWxlY3Qoe1xuICAgICAgICAgICAgYW5kcm9pZDogT2JqZWN0LmFzc2lnbih7fSwgZm9udHMuYW5kcm9pZC5ibGFjayksXG4gICAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICAgICAgZm9udFdlaWdodDogJzQwMCcsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KSksXG4gICAgICAgIHN0eWxlLFxuICAgIF0pfSB7Li4ucHJvcHN9Lz4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShDYXJkRmVhdHVyZWRTdWJ0aXRsZSwgJ0NhcmRGZWF0dXJl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