997ebcdf299664f5afa3e76c7f0f77ba
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createIconButtonComponent;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _objectUtils = require("./object-utils");

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["style", "iconStyle", "children"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    justifyContent: 'flex-start',
    alignItems: 'center',
    padding: 8
  },
  touchable: {
    overflow: 'hidden'
  },
  icon: {
    marginRight: 10
  },
  text: {
    fontWeight: '600',
    backgroundColor: 'transparent'
  }
});

var IOS7_BLUE = '#007AFF';
var TEXT_PROP_NAMES = ['ellipsizeMode', 'numberOfLines', 'textBreakStrategy', 'selectable', 'suppressHighlighting', 'allowFontScaling', 'adjustsFontSizeToFit', 'minimumFontScale'];
var TOUCHABLE_PROP_NAMES = ['accessible', 'accessibilityLabel', 'accessibilityHint', 'accessibilityComponentType', 'accessibilityRole', 'accessibilityStates', 'accessibilityTraits', 'onFocus', 'onBlur', 'disabled', 'onPress', 'onPressIn', 'onPressOut', 'onLayout', 'onLongPress', 'nativeID', 'testID', 'delayPressIn', 'delayPressOut', 'delayLongPress', 'activeOpacity', 'underlayColor', 'selectionColor', 'onShowUnderlay', 'onHideUnderlay', 'hasTVPreferredFocus', 'tvParallaxProperties'];

function createIconButtonComponent(Icon) {
  var _class;

  return _class = function (_PureComponent) {
    (0, _inherits2.default)(IconButton, _PureComponent);

    var _super = _createSuper(IconButton);

    function IconButton() {
      (0, _classCallCheck2.default)(this, IconButton);
      return _super.apply(this, arguments);
    }

    (0, _createClass2.default)(IconButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            style = _this$props.style,
            iconStyle = _this$props.iconStyle,
            children = _this$props.children,
            restProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
        var iconProps = (0, _objectUtils.pick)(restProps, TEXT_PROP_NAMES, 'style', 'name', 'size', 'color');
        var touchableProps = (0, _objectUtils.pick)(restProps, TOUCHABLE_PROP_NAMES);
        var props = (0, _objectUtils.omit)(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');
        iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;
        var colorStyle = (0, _objectUtils.pick)(this.props, 'color');
        var blockStyle = (0, _objectUtils.pick)(this.props, 'backgroundColor', 'borderRadius');
        return (0, _jsxRuntime.jsx)(_reactNative.TouchableHighlight, _objectSpread(_objectSpread({
          style: [styles.touchable, blockStyle]
        }, touchableProps), {}, {
          children: (0, _jsxRuntime.jsxs)(_reactNative.View, _objectSpread(_objectSpread({
            style: [styles.container, blockStyle, style]
          }, props), {}, {
            children: [(0, _jsxRuntime.jsx)(Icon, _objectSpread({}, iconProps)), typeof children === 'string' ? (0, _jsxRuntime.jsx)(_reactNative.Text, {
              style: [styles.text, colorStyle],
              selectable: false,
              children: children
            }) : children]
          }))
        }));
      }
    }]);
    return IconButton;
  }(_react.PureComponent), _class.defaultProps = {
    backgroundColor: IOS7_BLUE,
    borderRadius: 5,
    color: 'white',
    size: 20
  }, _class;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzdHlsZXMiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiY29udGFpbmVyIiwiZmxleERpcmVjdGlvbiIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsInBhZGRpbmciLCJ0b3VjaGFibGUiLCJvdmVyZmxvdyIsImljb24iLCJtYXJnaW5SaWdodCIsInRleHQiLCJmb250V2VpZ2h0IiwiYmFja2dyb3VuZENvbG9yIiwiSU9TN19CTFVFIiwiVEVYVF9QUk9QX05BTUVTIiwiVE9VQ0hBQkxFX1BST1BfTkFNRVMiLCJjcmVhdGVJY29uQnV0dG9uQ29tcG9uZW50IiwiSWNvbiIsInByb3BzIiwic3R5bGUiLCJpY29uU3R5bGUiLCJjaGlsZHJlbiIsInJlc3RQcm9wcyIsImljb25Qcm9wcyIsInBpY2siLCJ0b3VjaGFibGVQcm9wcyIsIm9taXQiLCJPYmplY3QiLCJrZXlzIiwiY29sb3JTdHlsZSIsImJsb2NrU3R5bGUiLCJQdXJlQ29tcG9uZW50IiwiZGVmYXVsdFByb3BzIiwiYm9yZGVyUmFkaXVzIiwiY29sb3IiLCJzaXplIl0sInNvdXJjZXMiOlsiaWNvbi1idXR0b24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBUZXh0LCBUb3VjaGFibGVIaWdobGlnaHQsIFZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgcGljaywgb21pdCB9IGZyb20gJy4vb2JqZWN0LXV0aWxzJztcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtc3RhcnQnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIHBhZGRpbmc6IDgsXG4gIH0sXG4gIHRvdWNoYWJsZToge1xuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgfSxcbiAgaWNvbjoge1xuICAgIG1hcmdpblJpZ2h0OiAxMCxcbiAgfSxcbiAgdGV4dDoge1xuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxuICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgfSxcbn0pO1xuXG5jb25zdCBJT1M3X0JMVUUgPSAnIzAwN0FGRic7XG5cbmNvbnN0IFRFWFRfUFJPUF9OQU1FUyA9IFtcbiAgJ2VsbGlwc2l6ZU1vZGUnLFxuICAnbnVtYmVyT2ZMaW5lcycsXG4gICd0ZXh0QnJlYWtTdHJhdGVneScsXG4gICdzZWxlY3RhYmxlJyxcbiAgJ3N1cHByZXNzSGlnaGxpZ2h0aW5nJyxcbiAgJ2FsbG93Rm9udFNjYWxpbmcnLFxuICAnYWRqdXN0c0ZvbnRTaXplVG9GaXQnLFxuICAnbWluaW11bUZvbnRTY2FsZScsXG5dO1xuXG5jb25zdCBUT1VDSEFCTEVfUFJPUF9OQU1FUyA9IFtcbiAgJ2FjY2Vzc2libGUnLFxuICAnYWNjZXNzaWJpbGl0eUxhYmVsJyxcbiAgJ2FjY2Vzc2liaWxpdHlIaW50JyxcbiAgJ2FjY2Vzc2liaWxpdHlDb21wb25lbnRUeXBlJyxcbiAgJ2FjY2Vzc2liaWxpdHlSb2xlJyxcbiAgJ2FjY2Vzc2liaWxpdHlTdGF0ZXMnLFxuICAnYWNjZXNzaWJpbGl0eVRyYWl0cycsXG4gICdvbkZvY3VzJyxcbiAgJ29uQmx1cicsXG4gICdkaXNhYmxlZCcsXG4gICdvblByZXNzJyxcbiAgJ29uUHJlc3NJbicsXG4gICdvblByZXNzT3V0JyxcbiAgJ29uTGF5b3V0JyxcbiAgJ29uTG9uZ1ByZXNzJyxcbiAgJ25hdGl2ZUlEJyxcbiAgJ3Rlc3RJRCcsXG4gICdkZWxheVByZXNzSW4nLFxuICAnZGVsYXlQcmVzc091dCcsXG4gICdkZWxheUxvbmdQcmVzcycsXG4gICdhY3RpdmVPcGFjaXR5JyxcbiAgJ3VuZGVybGF5Q29sb3InLFxuICAnc2VsZWN0aW9uQ29sb3InLFxuICAnb25TaG93VW5kZXJsYXknLFxuICAnb25IaWRlVW5kZXJsYXknLFxuICAnaGFzVFZQcmVmZXJyZWRGb2N1cycsXG4gICd0dlBhcmFsbGF4UHJvcGVydGllcycsXG5dO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVJY29uQnV0dG9uQ29tcG9uZW50KEljb24pIHtcbiAgcmV0dXJuIGNsYXNzIEljb25CdXR0b24gZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBJT1M3X0JMVUUsXG4gICAgICBib3JkZXJSYWRpdXM6IDUsXG4gICAgICBjb2xvcjogJ3doaXRlJyxcbiAgICAgIHNpemU6IDIwLFxuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7IHN0eWxlLCBpY29uU3R5bGUsIGNoaWxkcmVuLCAuLi5yZXN0UHJvcHMgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IGljb25Qcm9wcyA9IHBpY2soXG4gICAgICAgIHJlc3RQcm9wcyxcbiAgICAgICAgVEVYVF9QUk9QX05BTUVTLFxuICAgICAgICAnc3R5bGUnLFxuICAgICAgICAnbmFtZScsXG4gICAgICAgICdzaXplJyxcbiAgICAgICAgJ2NvbG9yJ1xuICAgICAgKTtcbiAgICAgIGNvbnN0IHRvdWNoYWJsZVByb3BzID0gcGljayhyZXN0UHJvcHMsIFRPVUNIQUJMRV9QUk9QX05BTUVTKTtcbiAgICAgIGNvbnN0IHByb3BzID0gb21pdChcbiAgICAgICAgcmVzdFByb3BzLFxuICAgICAgICBPYmplY3Qua2V5cyhpY29uUHJvcHMpLFxuICAgICAgICBPYmplY3Qua2V5cyh0b3VjaGFibGVQcm9wcyksXG4gICAgICAgICdpY29uU3R5bGUnLFxuICAgICAgICAnYm9yZGVyUmFkaXVzJyxcbiAgICAgICAgJ2JhY2tncm91bmRDb2xvcidcbiAgICAgICk7XG4gICAgICBpY29uUHJvcHMuc3R5bGUgPSBpY29uU3R5bGUgPyBbc3R5bGVzLmljb24sIGljb25TdHlsZV0gOiBzdHlsZXMuaWNvbjtcblxuICAgICAgY29uc3QgY29sb3JTdHlsZSA9IHBpY2sodGhpcy5wcm9wcywgJ2NvbG9yJyk7XG4gICAgICBjb25zdCBibG9ja1N0eWxlID0gcGljayh0aGlzLnByb3BzLCAnYmFja2dyb3VuZENvbG9yJywgJ2JvcmRlclJhZGl1cycpO1xuXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8VG91Y2hhYmxlSGlnaGxpZ2h0XG4gICAgICAgICAgc3R5bGU9e1tzdHlsZXMudG91Y2hhYmxlLCBibG9ja1N0eWxlXX1cbiAgICAgICAgICB7Li4udG91Y2hhYmxlUHJvcHN9XG4gICAgICAgID5cbiAgICAgICAgICA8VmlldyBzdHlsZT17W3N0eWxlcy5jb250YWluZXIsIGJsb2NrU3R5bGUsIHN0eWxlXX0gey4uLnByb3BzfT5cbiAgICAgICAgICAgIDxJY29uIHsuLi5pY29uUHJvcHN9IC8+XG4gICAgICAgICAgICB7dHlwZW9mIGNoaWxkcmVuID09PSAnc3RyaW5nJyA/IChcbiAgICAgICAgICAgICAgPFRleHQgc3R5bGU9e1tzdHlsZXMudGV4dCwgY29sb3JTdHlsZV19IHNlbGVjdGFibGU9e2ZhbHNlfT5cbiAgICAgICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIGNoaWxkcmVuXG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvVmlldz5cbiAgICAgICAgPC9Ub3VjaGFibGVIaWdobGlnaHQ+XG4gICAgICApO1xuICAgIH1cbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLE1BQU0sR0FBR0MsdUJBQUEsQ0FBV0MsTUFBWCxDQUFrQjtFQUMvQkMsU0FBUyxFQUFFO0lBQ1RDLGFBQWEsRUFBRSxLQUROO0lBRVRDLGNBQWMsRUFBRSxZQUZQO0lBR1RDLFVBQVUsRUFBRSxRQUhIO0lB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