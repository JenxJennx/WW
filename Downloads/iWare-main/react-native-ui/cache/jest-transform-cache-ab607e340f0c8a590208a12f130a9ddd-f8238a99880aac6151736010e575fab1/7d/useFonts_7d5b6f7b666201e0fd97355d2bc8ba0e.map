{"version":3,"names":["useFonts","map","useState","loaded","setLoaded","error","setError","useEffect","loadAsync","then","catch"],"sources":["useFonts.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { loadAsync } from 'expo-font';\n\n/**\n * Load a map of custom fonts to use in textual elements.\n * The map keys are used as font names, and can be used with `fontFamily: <name>;`.\n * It returns a boolean describing if all fonts are loaded.\n *\n * Note, the fonts are not \"reloaded\" when you dynamically change the font map.\n *\n * @see https://docs.expo.io/versions/latest/sdk/font/\n * @example const [loaded, error] = useFonts(...);\n */\nexport function useFonts(map) {\n  let [loaded, setLoaded] = useState(false);\n  let [error, setError] = useState(null);\n\n  useEffect(() => {\n    loadAsync(map)\n      .then(() => setLoaded(true))\n      .catch(setError);\n  }, []);\n\n  return [loaded, error];\n}\n"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAYO,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;EAC5B,gBAA0B,IAAAC,eAAA,EAAS,KAAT,CAA1B;EAAA;EAAA,IAAKC,MAAL;EAAA,IAAaC,SAAb;;EACA,iBAAwB,IAAAF,eAAA,EAAS,IAAT,CAAxB;EAAA;EAAA,IAAKG,KAAL;EAAA,IAAYC,QAAZ;;EAEA,IAAAC,gBAAA,EAAU,YAAM;IACd,IAAAC,mBAAA,EAAUP,GAAV,EACGQ,IADH,CACQ;MAAA,OAAML,SAAS,CAAC,IAAD,CAAf;IAAA,CADR,EAEGM,KAFH,CAESJ,QAFT;EAGD,CAJD,EAIG,EAJH;EAMA,OAAO,CAACH,MAAD,EAASE,KAAT,CAAP;AACD"}