2273c9eb65a8f97c67b9a553d4737b81
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _dev = require("@expo-google-fonts/dev");

var _reactNative = require("@testing-library/react-native");

var _HomeScreen = _interopRequireDefault(require("../Screens/HomeScreen"));

var _jsxRuntime = require("react/jsx-runtime");

function _regeneratorRuntime() { "use strict"; _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

describe('HomeScreen component tests that should pass', function () {
  it("should render the product information when api responds", function _callee2() {
    var item;
    return _regeneratorRuntime().async(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            item = {
              product_id: '1',
              product_name: 'SUNGLAZZEZ',
              brand: 'Bratz',
              product_price: '80'
            };
            _context2.next = 3;
            return _regeneratorRuntime().awrap((0, _reactNative.waitFor)(function _callee() {
              return _regeneratorRuntime().async(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      (0, _reactNative.render)((0, _jsxRuntime.jsx)(_HomeScreen.default, {
                        itemData: item
                      })).toJSON;

                    case 1:
                    case "end":
                      return _context.stop();
                  }
                }
              }, null, null, null, Promise);
            }));

          case 3:
            expect(item).toMatchSnapshot();

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("should render the top nav bar", function _callee4() {
    var _render, getByText;

    return _regeneratorRuntime().async(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_HomeScreen.default, {})), getByText = _render.getByText;
            _context4.next = 3;
            return _regeneratorRuntime().awrap((0, _reactNative.waitFor)(function _callee3() {
              return _regeneratorRuntime().async(function _callee3$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      (0, _reactNative.render)((0, _jsxRuntime.jsx)(_HomeScreen.default, {}));

                    case 1:
                    case "end":
                      return _context3.stop();
                  }
                }
              }, null, null, null, Promise);
            }));

          case 3:
            expect(getByText("iWare"));

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("should render multiple items", function _callee6() {
    var items;
    return _regeneratorRuntime().async(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            items = [{
              product_id: '1',
              product_name: 'SUNGLAZZEZ',
              brand: 'Bratz',
              product_price: '80'
            }, {
              product_id: '2',
              product_name: 'Aviators',
              brand: 'Gucci',
              product_price: '300'
            }, {
              product_id: '3',
              product_name: 'Heart Glasses',
              brand: 'Oakley',
              product_price: '120'
            }];
            _context6.next = 3;
            return _regeneratorRuntime().awrap((0, _reactNative.waitFor)(function _callee5() {
              return _regeneratorRuntime().async(function _callee5$(_context5) {
                while (1) {
                  switch (_context5.prev = _context5.next) {
                    case 0:
                      (0, _reactNative.render)((0, _jsxRuntime.jsx)(_HomeScreen.default, {
                        itemData: items
                      })).toJSON;

                    case 1:
                    case "end":
                      return _context5.stop();
                  }
                }
              }, null, null, null, Promise);
            }));

          case 3:
            expect(items).toMatchSnapshot();

          case 4:
          case "end":
            return _context6.stop();
        }
      }
    }, null, null, null, Promise);
  });
});
describe('HomeScreen component tests that should fail', function () {
  it("should render multiple items but fail when only expecting one item", function _callee8() {
    var items, item2;
    return _regeneratorRuntime().async(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            items = [{
              product_id: '1',
              product_name: 'SUNGLAZZEZ',
              brand: 'Bratz',
              product_price: '80'
            }, {
              product_id: '2',
              product_name: 'Aviators',
              brand: 'Gucci',
              product_price: '300'
            }, {
              product_id: '3',
              product_name: 'Heart Glasses',
              brand: 'Oakley',
              product_price: '120'
            }];
            item2 = {
              product_id: '4',
              product_name: 'Heart Glasses',
              brand: 'Oakley',
              product_price: '120'
            };
            _context8.next = 4;
            return _regeneratorRuntime().awrap((0, _reactNative.waitFor)(function _callee7() {
              return _regeneratorRuntime().async(function _callee7$(_context7) {
                while (1) {
                  switch (_context7.prev = _context7.next) {
                    case 0:
                      (0, _reactNative.render)((0, _jsxRuntime.jsx)(_HomeScreen.default, {
                        itemData: items
                      })).toJSON;

                    case 1:
                    case "end":
                      return _context7.stop();
                  }
                }
              }, null, null, null, Promise);
            }));

          case 4:
            expect(item2).toMatchSnapshot();

          case 5:
          case "end":
            return _context8.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("should not be able to find iBare", function _callee10() {
    var _render2, getByText;

    return _regeneratorRuntime().async(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_HomeScreen.default, {})), getByText = _render2.getByText;
            _context10.next = 3;
            return _regeneratorRuntime().awrap((0, _reactNative.waitFor)(function _callee9() {
              return _regeneratorRuntime().async(function _callee9$(_context9) {
                while (1) {
                  switch (_context9.prev = _context9.next) {
                    case 0:
                      (0, _reactNative.render)((0, _jsxRuntime.jsx)(_HomeScreen.default, {}));

                    case 1:
                    case "end":
                      return _context9.stop();
                  }
                }
              }, null, null, null, Promise);
            }));

          case 3:
            expect(getByText("iBare")).toBeFalse();

          case 4:
          case "end":
            return _context10.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("should render multiple items but fail when only expecting multiple items that are different", function _callee12() {
    var items, items2;
    return _regeneratorRuntime().async(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            items = [{
              product_id: '1',
              product_name: 'SUNGLAZZEZ',
              brand: 'Bratz',
              product_price: '80'
            }, {
              product_id: '2',
              product_name: 'Aviators',
              brand: 'Gucci',
              product_price: '300'
            }, {
              product_id: '3',
              product_name: 'Heart Glasses',
              brand: 'Oakley',
              product_price: '120'
            }];
            items2 = [{
              product_id: '2',
              product_name: 'Aviators',
              brand: 'Gucci',
              product_price: '300'
            }, {
              product_id: '3',
              product_name: 'Heart Glasses',
              brand: 'Oakley',
              product_price: '120'
            }, {
              product_id: '1',
              product_name: 'SUNGLAZZEZ',
              brand: 'Bratz',
              product_price: '80'
            }];
            _context12.next = 4;
            return _regeneratorRuntime().awrap((0, _reactNative.waitFor)(function _callee11() {
              return _regeneratorRuntime().async(function _callee11$(_context11) {
                while (1) {
                  switch (_context11.prev = _context11.next) {
                    case 0:
                      (0, _reactNative.render)((0, _jsxRuntime.jsx)(_HomeScreen.default, {
                        itemData: items
                      })).toJSON;

                    case 1:
                    case "end":
                      return _context11.stop();
                  }
                }
              }, null, null, null, Promise);
            }));

          case 4:
            expect(items2).not.toMatchSnapshot().toBeFalse();

          case 5:
          case "end":
            return _context12.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("should render the product information right when api responds but expect item to be wrong", function _callee14() {
    var item, item2;
    return _regeneratorRuntime().async(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            item = {
              product_id: '1',
              product_name: 'SUNGLAZZEZ',
              brand: 'Bratz',
              product_price: '80'
            };
            item2 = {
              product_id: '3',
              product_name: 'Heart Glasses',
              brand: 'Oakley',
              product_price: '120'
            };
            _context14.next = 4;
            return _regeneratorRuntime().awrap((0, _reactNative.waitFor)(function _callee13() {
              return _regeneratorRuntime().async(function _callee13$(_context13) {
                while (1) {
                  switch (_context13.prev = _context13.next) {
                    case 0:
                      (0, _reactNative.render)((0, _jsxRuntime.jsx)(_HomeScreen.default, {
                        itemData: item
                      })).toJSON;

                    case 1:
                    case "end":
                      return _context13.stop();
                  }
                }
              }, null, null, null, Promise);
            }));

          case 4:
            expect(item2).toMatchSnapshot().toBeFalse();

          case 5:
          case "end":
            return _context14.stop();
        }
      }
    }, null, null, null, Promise);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,