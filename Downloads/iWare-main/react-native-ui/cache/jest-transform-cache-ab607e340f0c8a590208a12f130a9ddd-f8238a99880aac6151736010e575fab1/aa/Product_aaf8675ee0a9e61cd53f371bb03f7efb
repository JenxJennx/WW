0ffa4cb6f8f7c1018cc2cafc6ca037f4
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Product;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _vectorIcons = require("@expo/vector-icons");

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Product(props) {
  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      liked = _useState2[0],
      setLiked = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      likedCart = _useState4[0],
      setLikedCart = _useState4[1];

  var cartId = '62dc55563afdd43a90aad170';

  var addToCart = function addToCart(productID) {
    var requestOptions = {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        product_id: productID,
        quantity: 1
      })
    };
    fetch('http://35.225.91.83/cart/' + cartId, requestOptions).then(function (response) {
      return response.json();
    }).catch(function (error) {
      console.log("Api call error");
      alert(error.message);
    });
  };

  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: [styles.container, {
      flexDirection: "column"
    }],
    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: {
        flex: 1
      },
      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
        children: (0, _jsxRuntime.jsx)(_reactNative.Image, {
          style: styles.imageView,
          source: {
            uri: props.itemData.picture_id
          },
          resizeMode: "stretch"
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.View, {
        children: (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
          style: styles.button,
          children: [(0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
            style: styles.glasses,
            name: "md-glasses-outline",
            size: 30,
            ios: "ios-happy-outline",
            android: "md-happy"
          }), (0, _jsxRuntime.jsx)(_reactNative.View, {
            children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
              style: styles.tryOnText,
              children: "Try them On"
            })
          })]
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.View, {
        children: (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: styles.label,
          children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
            style: {
              marginLeft: -30
            },
            children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
              children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
                style: styles.text,
                children: props.itemData.product_name
              }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
                style: styles.text,
                children: props.itemData.brand
              }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
                style: styles.text,
                children: ["$", props.itemData.product_price]
              })]
            }), (0, _jsxRuntime.jsx)(_reactNative.Pressable, {
              style: styles.buttont,
              onPress: function onPress() {
                return setLiked(function (isLiked) {
                  return !isLiked;
                });
              },
              children: (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
                style: styles.hearto,
                name: liked ? "heart" : "heart-outline",
                size: 55,
                color: "#D82130"
              })
            }), (0, _jsxRuntime.jsx)(_reactNative.Pressable, {
              style: styles.buttont,
              onPress: function onPress() {
                setLikedCart(function (isLiked) {
                  return !isLiked;
                });

                if (!likedCart) {
                  addToCart(props.itemData.product_id);
                }
              },
              children: (0, _jsxRuntime.jsx)(_vectorIcons.MaterialCommunityIcons, {
                style: styles.cart,
                name: likedCart ? "cart-check" : "cart-plus",
                size: 45
              })
            })]
          })
        })
      })]
    })
  });
}

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    marginTop: 14,
    alignItems: 'center'
  },
  imageView: {
    width: 394,
    height: 437,
    borderRadius: 20,
    alignContent: 'center'
  },
  text: {
    fontSize: 18,
    fontFamily: "Gruppo_400Regular",
    paddingTop: 8,
    paddingLeft: 33,
    color: '#D82130',
    marginRight: 45
  },
  hearto: {
    marginTop: -62,
    marginLeft: 248
  },
  cart: {
    marginTop: -58,
    marginLeft: 313,
    color: '#D82130'
  },
  label: {
    height: 90,
    width: 371,
    backgroundColor: '#fffbf6',
    borderRadius: 20,
    borderColor: '#000000',
    borderWidth: 1,
    left: 12,
    marginTop: -105,
    alignItems: 'center'
  },
  glasses: {
    marginTop: 1,
    marginLeft: '-64%',
    color: '#D82130'
  },
  button: {
    backgroundColor: '#E9FFFF',
    color: '#fff',
    justifyContent: 'center',
    alignItems: 'center',
    marginTop: -110,
    left: 121,
    borderRadius: 30,
    marginTop: -175,
    height: 52,
    width: 161,
    borderColor: 'black',
    borderTopWidth: .8,
    borderRightWidth: .5,
    borderBottomWidth: 5,
    borderLeftWidth: 5
  },
  buttont: {
    borderRadius: 30,
    opacity: 4,
    shadowRadius: 3,
    shadowColor: '#000000',
    shadowOffset: {
      width: -5,
      height: 6
    }
  },
  tryOnText: {
    marginTop: -24,
    color: '#D82130',
    fontSize: 12,
    marginLeft: '20%',
    fontWeight: '500'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,