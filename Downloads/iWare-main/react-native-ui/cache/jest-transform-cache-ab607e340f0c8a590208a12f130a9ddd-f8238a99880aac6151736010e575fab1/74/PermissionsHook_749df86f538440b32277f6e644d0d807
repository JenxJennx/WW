d066e7b4f6df577b98f54f7155008bd1
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createPermissionHook = createPermissionHook;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

var _excluded = ["get", "request"];

function _regeneratorRuntime() { "use strict"; _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function usePermission(methods, options) {
  var isMounted = (0, _react.useRef)(true);

  var _useState = (0, _react.useState)(null),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      status = _useState2[0],
      setStatus = _useState2[1];

  var _ref = options || {},
      _ref$get = _ref.get,
      get = _ref$get === void 0 ? true : _ref$get,
      _ref$request = _ref.request,
      request = _ref$request === void 0 ? false : _ref$request,
      permissionOptions = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  var getPermission = (0, _react.useCallback)(function _callee() {
    var response;
    return _regeneratorRuntime().async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _regeneratorRuntime().awrap(methods.getMethod(Object.keys(permissionOptions).length > 0 ? permissionOptions : undefined));

          case 2:
            response = _context.sent;
            if (isMounted.current) setStatus(response);
            return _context.abrupt("return", response);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, null, null, null, Promise);
  }, [methods.getMethod]);
  var requestPermission = (0, _react.useCallback)(function _callee2() {
    var response;
    return _regeneratorRuntime().async(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return _regeneratorRuntime().awrap(methods.requestMethod(Object.keys(permissionOptions).length > 0 ? permissionOptions : undefined));

          case 2:
            response = _context2.sent;
            if (isMounted.current) setStatus(response);
            return _context2.abrupt("return", response);

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, null, null, null, Promise);
  }, [methods.requestMethod]);
  (0, _react.useEffect)(function runMethods() {
    if (request) requestPermission();
    if (!request && get) getPermission();
  }, [get, request, requestPermission, getPermission]);
  (0, _react.useEffect)(function didMount() {
    isMounted.current = true;
    return function () {
      isMounted.current = false;
    };
  }, []);
  return [status, requestPermission, getPermission];
}

function createPermissionHook(methods) {
  return function (options) {
    return usePermission(methods, options);
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0FBNkJBLFNBQVNBLGFBQVQsQ0FDRUMsT0FERixFQUVFQyxPQUZGLEVBRTBDO0VBRXhDLElBQU1DLFNBQVMsR0FBRyxtQkFBTyxJQUFQLENBQWxCOztFQUNBLGdCQUE0QixxQkFBNEIsSUFBNUIsQ0FBNUI7RUFBQTtFQUFBLElBQU9DLE1BQVA7RUFBQSxJQUFlQyxTQUFmOztFQUNBLFdBQThESCxPQUFPLElBQUksRUFBekU7RUFBQSxvQkFBUUksR0FBUjtFQUFBLElBQVFBLEdBQVIseUJBQWMsSUFBZDtFQUFBLHdCQUFvQkMsT0FBcEI7RUFBQSxJQUFvQkEsT0FBcEIsNkJBQThCLEtBQTlCO0VBQUEsSUFBd0NDLGlCQUF4Qzs7RUFFQSxJQUFNQyxhQUFhLEdBQUcsd0JBQVk7SUFBQTtJQUFBO01BQUE7UUFBQTtVQUFBO1lBQUE7WUFBQSxtQ0FDVFIsT0FBTyxDQUFDUyxTQUFSLENBQ3JCQyxNQUFNLENBQUNDLElBQVAsQ0FBWUosaUJBQVosRUFBK0JLLE1BQS9CLEdBQXdDLENBQXhDLEdBQTZDTCxpQkFBN0MsR0FBNkVNLFNBRHhELENBRFM7O1VBQUE7WUFDMUJDLFFBRDBCO1lBSWhDLElBQUlaLFNBQVMsQ0FBQ2EsT0FBZCxFQUF1QlgsU0FBUyxDQUFDVSxRQUFELENBQVQ7WUFKUyxpQ0FLekJBLFFBTHlCOztVQUFBO1VBQUE7WUFBQTtRQUFBO01BQUE7SUFBQTtFQUFBLENBQVosRUFNbkIsQ0FBQ2QsT0FBTyxDQUFDUyxTQUFULENBTm1CLENBQXRCO0VBUUEsSUFBTU8saUJBQWlCLEdBQUcsd0JBQVk7SUFBQTtJQUFBO01BQUE7UUFBQTtVQUFBO1lBQUE7WUFBQSxtQ0FDYmhCLE9BQU8sQ0FBQ2lCLGFBQVIsQ0FDckJQLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixpQkFBWixFQUErQkssTUFBL0IsR0FBd0MsQ0FBeEMsR0FBNkNMLGlCQUE3QyxHQUE2RU0sU0FEeEQsQ0FEYTs7VUFBQTtZQUM5QkMsUUFEOEI7WUFJcEMsSUFBSVosU0FBUyxDQUFDYSxPQUFkLEVBQXVCWCxTQUFTLENBQUNVLFFBQUQsQ0FBVDtZQUphLGtDQUs3QkEsUUFMNkI7O1VBQUE7VUFBQTtZQUFBO1FBQUE7TUFBQTtJQUFBO0VBQUEsQ0FBWixFQU12QixDQUFDZCxPQUFPLENBQUNpQixhQUFULENBTnVCLENBQTFCO0VBUUEsc0JBQ0UsU0FBU0MsVUFBVCxHQUFtQjtJQUNqQixJQUFJWixPQUFKLEVBQWFVLGlCQUFpQjtJQUM5QixJQUFJLENBQUNWLE9BQUQsSUFBWUQsR0FBaEIsRUFBcUJHLGFBQWE7RUFDbkMsQ0FKSCxFQUtFLENBQUNILEdBQUQsRUFBTUMsT0FBTixFQUFlVSxpQkFBZixFQUFrQ1IsYUFBbEMsQ0FMRjtFQVNBLHNCQUFVLFNBQVNXLFFBQVQsR0FBaUI7SUFDekJqQixTQUFTLENBQUNhLE9BQVYsR0FBb0IsSUFBcEI7SUFDQSxPQUFPLFlBQUs7TUFDVmIsU0FBUyxDQUFDYSxPQUFWLEdBQW9CLEtBQXBCO0lBQ0QsQ0FGRDtFQUdELENBTEQsRUFLRyxFQUxIO0VBT0EsT0FBTyxDQUFDWixNQUFELEVBQVNhLGlCQUFULEVBQTRCUixhQUE1QixDQUFQO0FBQ0Q7O0FBTUssU0FBVVksb0JBQVYsQ0FDSnBCLE9BREksRUFDK0M7RUFFbkQsT0FBTyxVQUFDQyxPQUFEO0lBQUEsT0FDTEYsYUFBYSxDQUFzQkMsT0FBdEIsRUFBK0JDLE9BQS9CLENBRFI7RUFBQSxDQUFQO0FBRUQiLCJuYW1lcyI6WyJ1c2VQZXJtaXNzaW9uIiwibWV0aG9kcyIsIm9wdGlvbnMiLCJpc01vdW50ZWQiLCJzdGF0dXMiLCJzZXRTdGF0dXMiLCJnZXQiLCJyZXF1ZXN0IiwicGVybWlzc2lvbk9wdGlvbnMiLCJnZXRQZXJtaXNzaW9uIiwiZ2V0TWV0aG9kIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInJlc3BvbnNlIiwiY3VycmVudCIsInJlcXVlc3RQZXJtaXNzaW9uIiwicmVxdWVzdE1ldGhvZCIsInJ1bk1ldGhvZHMiLCJkaWRNb3VudCIsImNyZWF0ZVBlcm1pc3Npb25Ib29rIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9QZXJtaXNzaW9uc0hvb2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgUGVybWlzc2lvblJlc3BvbnNlIH0gZnJvbSAnLi9QZXJtaXNzaW9uc0ludGVyZmFjZSc7XG5cbi8vIFRoZXNlIHR5cGVzIGFyZSBpZGVudGljYWwsIGJ1dCBpbXByb3ZlcyB0aGUgcmVhZGFiaWxpdHkgZm9yIHN1Z2dlc3Rpb25zIGluIGVkaXRvcnNcbnR5cGUgUmVxdWVzdFBlcm1pc3Npb25NZXRob2Q8UGVybWlzc2lvbiBleHRlbmRzIFBlcm1pc3Npb25SZXNwb25zZT4gPSAoKSA9PiBQcm9taXNlPFBlcm1pc3Npb24+O1xudHlwZSBHZXRQZXJtaXNzaW9uTWV0aG9kPFBlcm1pc3Npb24gZXh0ZW5kcyBQZXJtaXNzaW9uUmVzcG9uc2U+ID0gKCkgPT4gUHJvbWlzZTxQZXJtaXNzaW9uPjtcblxuaW50ZXJmYWNlIFBlcm1pc3Npb25Ib29rTWV0aG9kczxQZXJtaXNzaW9uIGV4dGVuZHMgUGVybWlzc2lvblJlc3BvbnNlLCBPcHRpb25zID0gbmV2ZXI+IHtcbiAgLyoqIFRoZSBwZXJtaXNzaW9uIG1ldGhvZCB0aGF0IHJlcXVlc3RzIHRoZSB1c2VyIHRvIGdyYW50IHBlcm1pc3Npb24uICovXG4gIHJlcXVlc3RNZXRob2Q6IChvcHRpb25zPzogT3B0aW9ucykgPT4gUHJvbWlzZTxQZXJtaXNzaW9uPjtcbiAgLyoqIFRoZSBwZXJtaXNzaW9uIG1ldGhvZCB0aGF0IG9ubHkgZmV0Y2hlcyB0aGUgY3VycmVudCBwZXJtaXNzaW9uIHN0YXR1cy4gKi9cbiAgZ2V0TWV0aG9kOiAob3B0aW9ucz86IE9wdGlvbnMpID0+IFByb21pc2U8UGVybWlzc2lvbj47XG59XG5cbmludGVyZmFjZSBQZXJtaXNzaW9uSG9va0JlaGF2aW9yIHtcbiAgLyoqIElmIHRoZSBob29rIHNob3VsZCBhdXRvbWF0aWNhbGx5IGZldGNoIHRoZSBjdXJyZW50IHBlcm1pc3Npb24gc3RhdHVzLCB3aXRob3V0IGFza2luZyB0aGUgdXNlci4gKi9cbiAgZ2V0PzogYm9vbGVhbjtcbiAgLyoqIElmIHRoZSBob29rIHNob3VsZCBhdXRvbWF0aWNhbGx5IHJlcXVlc3QgdGhlIHVzZXIgdG8gZ3JhbnQgcGVybWlzc2lvbi4gKi9cbiAgcmVxdWVzdD86IGJvb2xlYW47XG59XG5cbmV4cG9ydCB0eXBlIFBlcm1pc3Npb25Ib29rT3B0aW9uczxPcHRpb25zIGV4dGVuZHMgb2JqZWN0PiA9IFBlcm1pc3Npb25Ib29rQmVoYXZpb3IgJiBPcHRpb25zO1xuXG4vKipcbiAqIEdldCBvciByZXF1ZXN0IHBlcm1pc3Npb24gZm9yIHByb3RlY3RlZCBmdW5jdGlvbmFsaXR5IHdpdGhpbiB0aGUgYXBwLlxuICogSXQgdXNlcyBzZXBhcmF0ZSBwZXJtaXNzaW9uIHJlcXVlc3RlcnMgdG8gaW50ZXJhY3Qgd2l0aCBhIHNpbmdsZSBwZXJtaXNzaW9uLlxuICogQnkgZGVmYXVsdCwgdGhlIGhvb2sgd2lsbCBvbmx5IHJldHJpZXZlIHRoZSBwZXJtaXNzaW9uIHN0YXR1cy5cbiAqL1xuZnVuY3Rpb24gdXNlUGVybWlzc2lvbjxQZXJtaXNzaW9uIGV4dGVuZHMgUGVybWlzc2lvblJlc3BvbnNlLCBPcHRpb25zIGV4dGVuZHMgb2JqZWN0PihcbiAgbWV0aG9kczogUGVybWlzc2lvbkhvb2tNZXRob2RzPFBlcm1pc3Npb24sIE9wdGlvbnM+LFxuICBvcHRpb25zPzogUGVybWlzc2lvbkhvb2tPcHRpb25zPE9wdGlvbnM+XG4pOiBbUGVybWlzc2lvbiB8IG51bGwsIFJlcXVlc3RQZXJtaXNzaW9uTWV0aG9kPFBlcm1pc3Npb24+LCBHZXRQZXJtaXNzaW9uTWV0aG9kPFBlcm1pc3Npb24+XSB7XG4gIGNvbnN0IGlzTW91bnRlZCA9IHVzZVJlZih0cnVlKTtcbiAgY29uc3QgW3N0YXR1cywgc2V0U3RhdHVzXSA9IHVzZVN0YXRlPFBlcm1pc3Npb24gfCBudWxsPihudWxsKTtcbiAgY29uc3QgeyBnZXQgPSB0cnVlLCByZXF1ZXN0ID0gZmFsc2UsIC4uLnBlcm1pc3Npb25PcHRpb25zIH0gPSBvcHRpb25zIHx8IHt9O1xuXG4gIGNvbnN0IGdldFBlcm1pc3Npb24gPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBtZXRob2RzLmdldE1ldGhvZChcbiAgICAgIE9iamVjdC5rZXlzKHBlcm1pc3Npb25PcHRpb25zKS5sZW5ndGggPiAwID8gKHBlcm1pc3Npb25PcHRpb25zIGFzIE9wdGlvbnMpIDogdW5kZWZpbmVkXG4gICAgKTtcbiAgICBpZiAoaXNNb3VudGVkLmN1cnJlbnQpIHNldFN0YXR1cyhyZXNwb25zZSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9LCBbbWV0aG9kcy5nZXRNZXRob2RdKTtcblxuICBjb25zdCByZXF1ZXN0UGVybWlzc2lvbiA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG1ldGhvZHMucmVxdWVzdE1ldGhvZChcbiAgICAgIE9iamVjdC5rZXlzKHBlcm1pc3Npb25PcHRpb25zKS5sZW5ndGggPiAwID8gKHBlcm1pc3Npb25PcHRpb25zIGFzIE9wdGlvbnMpIDogdW5kZWZpbmVkXG4gICAgKTtcbiAgICBpZiAoaXNNb3VudGVkLmN1cnJlbnQpIHNldFN0YXR1cyhyZXNwb25zZSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9LCBbbWV0aG9kcy5yZXF1ZXN0TWV0aG9kXSk7XG5cbiAgdXNlRWZmZWN0KFxuICAgIGZ1bmN0aW9uIHJ1bk1ldGhvZHMoKSB7XG4gICAgICBpZiAocmVxdWVzdCkgcmVxdWVzdFBlcm1pc3Npb24oKTtcbiAgICAgIGlmICghcmVxdWVzdCAmJiBnZXQpIGdldFBlcm1pc3Npb24oKTtcbiAgICB9LFxuICAgIFtnZXQsIHJlcXVlc3QsIHJlcXVlc3RQZXJtaXNzaW9uLCBnZXRQZXJtaXNzaW9uXVxuICApO1xuXG4gIC8vIFdvcmthcm91bmQgZm9yIHVubW91bnRpbmcgY29tcG9uZW50cyByZWNlaXZpbmcgc3RhdGUgdXBkYXRlc1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gZGlkTW91bnQoKSB7XG4gICAgaXNNb3VudGVkLmN1cnJlbnQgPSB0cnVlO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpc01vdW50ZWQuY3VycmVudCA9IGZhbHNlO1xuICAgIH07XG4gIH0sIFtdKTtcblxuICByZXR1cm4gW3N0YXR1cywgcmVxdWVzdFBlcm1pc3Npb24sIGdldFBlcm1pc3Npb25dO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBwZXJtaXNzaW9uIGhvb2sgd2l0aCB0aGUgcGVybWlzc2lvbiBtZXRob2RzIGJ1aWx0LWluLlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBxdWlja2x5IGNyZWF0ZSBzcGVjaWZpYyBwZXJtaXNzaW9uIGhvb2tzIGluIGV2ZXJ5IG1vZHVsZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBlcm1pc3Npb25Ib29rPFBlcm1pc3Npb24gZXh0ZW5kcyBQZXJtaXNzaW9uUmVzcG9uc2UsIE9wdGlvbnMgZXh0ZW5kcyBvYmplY3Q+KFxuICBtZXRob2RzOiBQZXJtaXNzaW9uSG9va01ldGhvZHM8UGVybWlzc2lvbiwgT3B0aW9ucz5cbikge1xuICByZXR1cm4gKG9wdGlvbnM/OiBQZXJtaXNzaW9uSG9va09wdGlvbnM8T3B0aW9ucz4pID0+XG4gICAgdXNlUGVybWlzc2lvbjxQZXJtaXNzaW9uLCBPcHRpb25zPihtZXRob2RzLCBvcHRpb25zKTtcbn1cbiJdfQ==