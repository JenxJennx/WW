e7877589f1ca85ef4f6d1c26fde041a6
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _config = require("../config");

var _Icon = _interopRequireDefault(require("../icons/Icon"));

var _jsxRuntime = require("react/jsx-runtime");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var ListItemChevron = function ListItemChevron(_a) {
  var containerStyle = _a.containerStyle,
      props = __rest(_a, ["containerStyle"]);

  return (0, _jsxRuntime.jsx)(_Icon.default, _objectSpread({
    type: _reactNative.Platform.OS === 'ios' ? 'ionicon' : 'material',
    color: "#D1D1D6",
    name: _reactNative.Platform.OS === 'ios' ? 'chevron-forward-outline' : 'keyboard-arrow-right',
    size: 16,
    containerStyle: _reactNative.StyleSheet.flatten([{
      alignSelf: 'center'
    }, containerStyle])
  }, props));
};

var _default = (0, _config.withTheme)(ListItemChevron, 'ListItemChevron');

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkxpc3RJdGVtQ2hldnJvbiIsIl9hIiwiY29udGFpbmVyU3R5bGUiLCJwcm9wcyIsIlBsYXRmb3JtIiwiT1MiLCJTdHlsZVNoZWV0IiwiZmxhdHRlbiIsImFsaWduU2VsZiIsIndpdGhUaGVtZSJdLCJzb3VyY2VzIjpbIkxpc3RJdGVtQ2hldnJvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgUGxhdGZvcm0gfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vY29uZmlnJztcbmltcG9ydCBJY29uIGZyb20gJy4uL2ljb25zL0ljb24nO1xuY29uc3QgTGlzdEl0ZW1DaGV2cm9uID0gKF9hKSA9PiB7XG4gICAgdmFyIHsgY29udGFpbmVyU3R5bGUgfSA9IF9hLCBwcm9wcyA9IF9fcmVzdChfYSwgW1wiY29udGFpbmVyU3R5bGVcIl0pO1xuICAgIHJldHVybiAoPEljb24gdHlwZT17UGxhdGZvcm0uT1MgPT09ICdpb3MnID8gJ2lvbmljb24nIDogJ21hdGVyaWFsJ30gY29sb3I9XCIjRDFEMUQ2XCIgbmFtZT17UGxhdGZvcm0uT1MgPT09ICdpb3MnXG4gICAgICAgID8gJ2NoZXZyb24tZm9yd2FyZC1vdXRsaW5lJ1xuICAgICAgICA6ICdrZXlib2FyZC1hcnJvdy1yaWdodCd9IHNpemU9ezE2fSBjb250YWluZXJTdHlsZT17U3R5bGVTaGVldC5mbGF0dGVuKFtcbiAgICAgICAgeyBhbGlnblNlbGY6ICdjZW50ZXInIH0sXG4gICAgICAgIGNvbnRhaW5lclN0eWxlLFxuICAgIF0pfSB7Li4ucHJvcHN9Lz4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShMaXN0SXRlbUNoZXZyb24sICdMaXN0SXRlbUNoZXZyb24nKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBV0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBZEEsSUFBSUEsTUFBTSxHQUFJLFFBQVEsS0FBS0EsTUFBZCxJQUF5QixVQUFVQyxDQUFWLEVBQWFDLENBQWIsRUFBZ0I7RUFDbEQsSUFBSUMsQ0FBQyxHQUFHLEVBQVI7O0VBQ0EsS0FBSyxJQUFJQyxDQUFULElBQWNILENBQWQ7SUFBaUIsSUFBSUksTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxjQUFqQixDQUFnQ0MsSUFBaEMsQ0FBcUNQLENBQXJDLEVBQXdDRyxDQUF4QyxLQUE4Q0YsQ0FBQyxDQUFDTyxPQUFGLENBQVVMLENBQVYsSUFBZSxDQUFqRSxFQUNiRCxDQUFDLENBQUNDLENBQUQsQ0FBRCxHQUFPSCxDQUFDLENBQUNHLENBQUQsQ0FBUjtFQURKOztFQUVBLElBQUlILENBQUMsSUFBSSxJQUFMLElBQWEsT0FBT0ksTUFBTSxDQUFDSyxxQkFBZCxLQUF3QyxVQUF6RCxFQUNJLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQVIsRUFBV1AsQ0FBQyxHQUFHQyxNQUFNLENBQUNLLHFCQUFQLENBQTZCVCxDQUE3QixDQUFwQixFQUFxRFUsQ0FBQyxHQUFHUCxDQUFDLENBQUNRLE1BQTNELEVBQW1FRCxDQUFDLEVBQXBFLEVBQXdFO0lBQ3BFLElBQUlULENBQUMsQ0FBQ08sT0FBRixDQUFVTCxDQUFDLENBQUNPLENBQUQsQ0FBWCxJQUFrQixDQUFsQixJQUF1Qk4sTUFBTSxDQUFDQyxTQUFQLENBQWlCTyxvQkFBakIsQ0FBc0NMLElBQXRDLENBQTJDUCxDQUEzQyxFQUE4Q0csQ0FBQyxDQUFDTyxDQUFELENBQS9DLENBQTNCLEVBQ0lSLENBQUMsQ0FBQ0MsQ0FBQyxDQUFDTyxDQUFELENBQUYsQ0FBRCxHQUFVVixDQUFDLENBQUNHLENBQUMsQ0FBQ08sQ0FBRCxDQUFGLENBQVg7RUFDUDtFQUNMLE9BQU9SLENBQVA7QUFDSCxDQVZEOztBQWVBLElBQU1XLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ0MsRUFBRCxFQUFRO0VBQ3hCLElBQUVDLGNBQUYsR0FBcUJELEVBQXJCLENBQUVDLGNBQUY7RUFBQSxJQUF5QkMsS0FBekIsR0FBaUNqQixNQUFNLENBQUNlLEVBQUQsRUFBSyxDQUFDLGdCQUFELENBQUwsQ0FBdkM7O0VBQ0osT0FBUSxxQkFBQyxhQUFEO0lBQU0sSUFBSSxFQUFFRyxxQkFBQSxDQUFTQyxFQUFULEtBQWdCLEtBQWhCLEdBQXdCLFNBQXhCLEdBQW9DLFVBQWhEO0lBQTRELEtBQUssRUFBQyxTQUFsRTtJQUE0RSxJQUFJLEVBQUVELHFCQUFBLENBQVNDLEVBQVQsS0FBZ0IsS0FBaEIsR0FDcEYseUJBRG9GLEdBRXBGLHNCQUZFO0lBRXNCLElBQUksRUFBRSxFQUY1QjtJQUVnQyxjQUFjLEVBQUVDLHVCQUFBLENBQVdDLE9BQVgsQ0FBbUIsQ0FDdkU7TUFBRUMsU0FBUyxFQUFFO0lBQWIsQ0FEdUUsRUFFdkVOLGNBRnVFLENBQW5CO0VBRmhELEdBS0FDLEtBTEEsRUFBUjtBQU1ILENBUkQ7O2VBU2UsSUFBQU0saUJBQUEsRUFBVVQsZUFBVixFQUEyQixpQkFBM0IsQyJ9