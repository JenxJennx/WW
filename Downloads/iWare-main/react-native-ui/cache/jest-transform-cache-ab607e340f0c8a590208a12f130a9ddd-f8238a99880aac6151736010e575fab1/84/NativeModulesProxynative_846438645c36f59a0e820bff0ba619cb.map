{"version":3,"mappings":";;;;;AAAA;;AAIA,IAAMA,WAAW,GAAGC,2BAAcC,oBAAlC;AACA,IAAMC,mBAAmB,GAAG,kBAA5B;AACA,IAAMC,kBAAkB,GAAG,iBAA3B;AAEA,IAAMC,kBAAkB,GAAgD,EAAxE;;AAEA,IAAIL,WAAJ,EAAiB;EACfM,MAAM,CAACC,IAAP,CAAYP,WAAW,CAACI,kBAAD,CAAvB,EAA6CI,OAA7C,CAAqD,UAACC,UAAD,EAAe;IAClEJ,kBAAkB,CAACI,UAAD,CAAlB,GAAiCT,WAAW,CAACG,mBAAD,CAAX,CAAiCM,UAAjC,KAAgD,EAAjF;IACAT,WAAW,CAACI,kBAAD,CAAX,CAAgCK,UAAhC,EAA4CD,OAA5C,CAAoD,UAACE,UAAD,EAAe;MACjEL,kBAAkB,CAACI,UAAD,CAAlB,CAA+BC,UAAU,CAACC,IAA1C,IAAkD,YAAqC;QACrF,IAAQC,GAAR,GAAgCF,UAAhC,CAAQE,GAAR;QAAA,IAAaC,cAAb,GAAgCH,UAAhC,CAAaG,cAAb;;QADqF,kCAAjCC,IAAiC;UAAjCA,IAAiC;QAAA;;QAErF,IAAID,cAAc,KAAKC,IAAI,CAACC,MAA5B,EAAoC;UAClC,OAAOC,OAAO,CAACC,MAAR,CACL,IAAIC,KAAJ,oBACmBT,UADnB,SACiCC,UAAU,CAACC,IAD5C,iBAC4DE,cAD5D,UAEIA,cAAc,KAAK,CAAnB,GAAuB,UAAvB,GAAoC,WAFxC,uBAGmBC,IAAI,CAACC,MAHxB,CADK,CAAP;QAOD;;QACD,OAAOf,WAAW,CAACmB,UAAZ,CAAuBV,UAAvB,EAAmCG,GAAnC,EAAwCE,IAAxC,CAAP;MACD,CAZD;IAaD,CAdD;;IA0BA,IAAIb,2BAAcmB,yBAAlB,EAA6C;MAC3Cf,kBAAkB,CAACI,UAAD,CAAlB,CAA+BY,WAA/B,GAA6C;QAAA;;QAAA,mCAAIP,IAAJ;UAAIA,IAAJ;QAAA;;QAAA,OAC3C,oDAAcM,yBAAd,EAAwCE,kBAAxC,+BAA2Db,UAA3D,SAA0EK,IAA1E,EAD2C;MAAA,CAA7C;;MAEAT,kBAAkB,CAACI,UAAD,CAAlB,CAA+Bc,eAA/B,GAAiD;QAAA;;QAAA,mCAAIT,IAAJ;UAAIA,IAAJ;QAAA;;QAAA,OAC/C,qDAAcM,yBAAd,EAAwCI,sBAAxC,gCAA+Df,UAA/D,SAA8EK,IAA9E,EAD+C;MAAA,CAAjD;IAED,CALD,MAKO;MAILT,kBAAkB,CAACI,UAAD,CAAlB,CAA+BY,WAA/B,GAA6C,YAAK,CAAG,CAArD;;MACAhB,kBAAkB,CAACI,UAAD,CAAlB,CAA+Bc,eAA/B,GAAiD,YAAK,CAAG,CAAzD;IACD;EACF,CAxCD;AAyCD,CA1CD,MA0CO;EACLE,OAAO,CAACC,IAAR;AAGD;;eAEcrB,kB","names":["NativeProxy","NativeModules","NativeUnimoduleProxy","modulesConstantsKey","exportedMethodsKey","NativeModulesProxy","Object","keys","forEach","moduleName","methodInfo","name","key","argumentsCount","args","length","Promise","reject","Error","callMethod","EXReactNativeEventEmitter","addListener","addProxiedListener","removeListeners","removeProxiedListeners","console","warn"],"sourceRoot":"","sources":["../src/NativeModulesProxy.native.ts"],"sourcesContent":["import { NativeModules } from 'react-native';\n\nimport { ProxyNativeModule } from './NativeModulesProxy.types';\n\nconst NativeProxy = NativeModules.NativeUnimoduleProxy;\nconst modulesConstantsKey = 'modulesConstants';\nconst exportedMethodsKey = 'exportedMethods';\n\nconst NativeModulesProxy: { [moduleName: string]: ProxyNativeModule } = {};\n\nif (NativeProxy) {\n  Object.keys(NativeProxy[exportedMethodsKey]).forEach((moduleName) => {\n    NativeModulesProxy[moduleName] = NativeProxy[modulesConstantsKey][moduleName] || {};\n    NativeProxy[exportedMethodsKey][moduleName].forEach((methodInfo) => {\n      NativeModulesProxy[moduleName][methodInfo.name] = (...args: unknown[]): Promise<any> => {\n        const { key, argumentsCount } = methodInfo;\n        if (argumentsCount !== args.length) {\n          return Promise.reject(\n            new Error(\n              `Native method ${moduleName}.${methodInfo.name} expects ${argumentsCount} ${\n                argumentsCount === 1 ? 'argument' : 'arguments'\n              } but received ${args.length}`\n            )\n          );\n        }\n        return NativeProxy.callMethod(moduleName, key, args);\n      };\n    });\n\n    // These are called by EventEmitter (which is a wrapper for NativeEventEmitter)\n    // only on iOS and they use iOS-specific native module, EXReactNativeEventEmitter.\n    //\n    // On Android only {start,stop}Observing are called on the native module\n    // and these should be exported as Expo methods.\n    //\n    // Before the RN 65, addListener/removeListeners weren't called on Android. However, it no longer stays true.\n    // See https://github.com/facebook/react-native/commit/f5502fbda9fe271ff6e1d0da773a3a8ee206a453.\n    // That's why, we check if the `EXReactNativeEventEmitter` exists and only if yes, we use it in the listener implementation.\n    // Otherwise, those methods are NOOP.\n    if (NativeModules.EXReactNativeEventEmitter) {\n      NativeModulesProxy[moduleName].addListener = (...args) =>\n        NativeModules.EXReactNativeEventEmitter.addProxiedListener(moduleName, ...args);\n      NativeModulesProxy[moduleName].removeListeners = (...args) =>\n        NativeModules.EXReactNativeEventEmitter.removeProxiedListeners(moduleName, ...args);\n    } else {\n      // Fixes on Android:\n      // WARN  `new NativeEventEmitter()` was called with a non-null argument without the required `addListener` method.\n      // WARN  `new NativeEventEmitter()` was called with a non-null argument without the required `removeListeners` method.\n      NativeModulesProxy[moduleName].addListener = () => {};\n      NativeModulesProxy[moduleName].removeListeners = () => {};\n    }\n  });\n} else {\n  console.warn(\n    `The \"EXNativeModulesProxy\" native module is not exported through NativeModules; verify that expo-modules-core's native code is linked properly`\n  );\n}\n\nexport default NativeModulesProxy;\n"]}