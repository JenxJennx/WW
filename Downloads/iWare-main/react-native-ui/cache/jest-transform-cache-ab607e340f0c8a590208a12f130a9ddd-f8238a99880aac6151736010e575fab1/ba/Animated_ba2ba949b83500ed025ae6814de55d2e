4b54b5aefc1bfbd563e271c17674f439
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _Platform = _interopRequireDefault(require("../Utilities/Platform"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var AnimatedMock = require("./AnimatedMock");

var AnimatedImplementation = require("./AnimatedImplementation");

var Animated = _Platform.default.isTesting ? AnimatedMock : AnimatedImplementation;
module.exports = _objectSpread({
  get FlatList() {
    return require("./components/AnimatedFlatList");
  },

  get Image() {
    return require("./components/AnimatedImage");
  },

  get ScrollView() {
    return require("./components/AnimatedScrollView");
  },

  get SectionList() {
    return require("./components/AnimatedSectionList");
  },

  get Text() {
    return require("./components/AnimatedText");
  },

  get View() {
    return require("./components/AnimatedView");
  }

}, Animated);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBbmltYXRlZE1vY2siLCJyZXF1aXJlIiwiQW5pbWF0ZWRJbXBsZW1lbnRhdGlvbiIsIkFuaW1hdGVkIiwiUGxhdGZvcm0iLCJpc1Rlc3RpbmciLCJtb2R1bGUiLCJleHBvcnRzIiwiRmxhdExpc3QiLCJJbWFnZSIsIlNjcm9sbFZpZXciLCJTZWN0aW9uTGlzdCIsIlRleHQiLCJWaWV3Il0sInNvdXJjZXMiOlsiQW5pbWF0ZWQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0IFBsYXRmb3JtIGZyb20gJy4uL1V0aWxpdGllcy9QbGF0Zm9ybSc7XG5pbXBvcnQgdHlwZW9mIEFuaW1hdGVkRmxhdExpc3QgZnJvbSAnLi9jb21wb25lbnRzL0FuaW1hdGVkRmxhdExpc3QnO1xuaW1wb3J0IHR5cGVvZiBBbmltYXRlZEltYWdlIGZyb20gJy4vY29tcG9uZW50cy9BbmltYXRlZEltYWdlJztcbmltcG9ydCB0eXBlb2YgQW5pbWF0ZWRTY3JvbGxWaWV3IGZyb20gJy4vY29tcG9uZW50cy9BbmltYXRlZFNjcm9sbFZpZXcnO1xuaW1wb3J0IHR5cGVvZiBBbmltYXRlZFNlY3Rpb25MaXN0IGZyb20gJy4vY29tcG9uZW50cy9BbmltYXRlZFNlY3Rpb25MaXN0JztcbmltcG9ydCB0eXBlb2YgQW5pbWF0ZWRUZXh0IGZyb20gJy4vY29tcG9uZW50cy9BbmltYXRlZFRleHQnO1xuaW1wb3J0IHR5cGVvZiBBbmltYXRlZFZpZXcgZnJvbSAnLi9jb21wb25lbnRzL0FuaW1hdGVkVmlldyc7XG5cbmNvbnN0IEFuaW1hdGVkTW9jayA9IHJlcXVpcmUoJy4vQW5pbWF0ZWRNb2NrJyk7XG5jb25zdCBBbmltYXRlZEltcGxlbWVudGF0aW9uID0gcmVxdWlyZSgnLi9BbmltYXRlZEltcGxlbWVudGF0aW9uJyk7XG5cbmNvbnN0IEFuaW1hdGVkID0gKChQbGF0Zm9ybS5pc1Rlc3RpbmdcbiAgPyBBbmltYXRlZE1vY2tcbiAgOiBBbmltYXRlZEltcGxlbWVudGF0aW9uKTogdHlwZW9mIEFuaW1hdGVkTW9jayk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXQgRmxhdExpc3QoKTogQW5pbWF0ZWRGbGF0TGlzdCB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vY29tcG9uZW50cy9BbmltYXRlZEZsYXRMaXN0Jyk7XG4gIH0sXG4gIGdldCBJbWFnZSgpOiBBbmltYXRlZEltYWdlIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9jb21wb25lbnRzL0FuaW1hdGVkSW1hZ2UnKTtcbiAgfSxcbiAgZ2V0IFNjcm9sbFZpZXcoKTogQW5pbWF0ZWRTY3JvbGxWaWV3IHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9jb21wb25lbnRzL0FuaW1hdGVkU2Nyb2xsVmlldycpO1xuICB9LFxuICBnZXQgU2VjdGlvbkxpc3QoKTogQW5pbWF0ZWRTZWN0aW9uTGlzdCB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vY29tcG9uZW50cy9BbmltYXRlZFNlY3Rpb25MaXN0Jyk7XG4gIH0sXG4gIGdldCBUZXh0KCk6IEFuaW1hdGVkVGV4dCB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vY29tcG9uZW50cy9BbmltYXRlZFRleHQnKTtcbiAgfSxcbiAgZ2V0IFZpZXcoKTogQW5pbWF0ZWRWaWV3IHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9jb21wb25lbnRzL0FuaW1hdGVkVmlldycpO1xuICB9LFxuICAuLi5BbmltYXRlZCxcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFVQTs7Ozs7O0FBUUEsSUFBTUEsWUFBWSxHQUFHQyxPQUFPLGtCQUE1Qjs7QUFDQSxJQUFNQyxzQkFBc0IsR0FBR0QsT0FBTyw0QkFBdEM7O0FBRUEsSUFBTUUsUUFBUSxHQUFLQyxpQkFBQSxDQUFTQyxTQUFULEdBQ2ZMLFlBRGUsR0FFZkUsc0JBRko7QUFJQUksTUFBTSxDQUFDQyxPQUFQO0VBQ0UsSUFBSUMsUUFBSixHQUFpQztJQUMvQixPQUFPUCxPQUFPLGlDQUFkO0VBQ0QsQ0FISDs7RUFJRSxJQUFJUSxLQUFKLEdBQTJCO0lBQ3pCLE9BQU9SLE9BQU8sOEJBQWQ7RUFDRCxDQU5IOztFQU9FLElBQUlTLFVBQUosR0FBcUM7SUFDbkMsT0FBT1QsT0FBTyxtQ0FBZDtFQUNELENBVEg7O0VBVUUsSUFBSVUsV0FBSixHQUF1QztJQUNyQyxPQUFPVixPQUFPLG9DQUFkO0VBQ0QsQ0FaSDs7RUFhRSxJQUFJVyxJQUFKLEdBQXlCO0lBQ3ZCLE9BQU9YLE9BQU8sNkJBQWQ7RUFDRCxDQWZIOztFQWdCRSxJQUFJWSxJQUFKLEdBQXlCO0lBQ3ZCLE9BQU9aLE9BQU8sNkJBQWQ7RUFDRDs7QUFsQkgsR0FtQktFLFFBbkJMIn0=